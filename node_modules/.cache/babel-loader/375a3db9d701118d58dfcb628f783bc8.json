{"ast":null,"code":"import { getParlayStakeLimit, getSingleStakeLimit } from './liability';\nimport { getSportsName, hasMarketDefinition, isLoaded, isLoading, loadLocale, Locale, MarketType, overUnderMarket, possibleOutcomeCount, selectionCountPerLine } from './sports-core';\nimport { getMarketDefinitions, getMarketDescription, getMarketName, getOutcome } from './sports-core/market-definitions';\nexport { getParlayStakeLimit, getSingleStakeLimit };\n\nfunction throwIfInvalidMarketType(marketType) {\n  if (!marketType || !Object.values(MarketType).includes(marketType)) {\n    throw new Error(\"Got \" + marketType + \", please pass in one of the supported marketType (\" + Object.values(MarketType) + \")\");\n  }\n}\n\nfunction throwIfUndefined(v, name) {\n  if (typeof v === 'undefined') {\n    throw new Error(\"Missing argument \" + name);\n  }\n}\n\nfunction throwIfArrayEmpty(v, name) {\n  if (!v || v.length < 1) {\n    throw new Error(\"Missing argument \" + name);\n  }\n}\n\nfunction sanitizedSubmarketKeys(marketType, submarketKeys) {\n  var marketDefinitions = getMarketDefinitions(Locale.en);\n  var marketDefinition = marketDefinitions[marketType];\n\n  if (!marketDefinition) {\n    return submarketKeys;\n  }\n\n  var marketSplits = marketDefinition.Split.split('&');\n  return submarketKeys.reduce(function (accumulator, currentValue) {\n    if (currentValue.includes('{{')) {\n      return accumulator;\n    }\n\n    var splits = currentValue.split('&');\n\n    if (splits.length !== marketSplits.length) {\n      return accumulator;\n    }\n\n    accumulator.push(currentValue);\n    return accumulator;\n  }, []);\n}\n\nfunction getMarket(eventApiData, marketType, marketOptions) {\n  if (marketOptions === void 0) {\n    marketOptions = {\n      locale: Locale.en\n    };\n  }\n\n  throwIfUndefined(eventApiData, 'eventApiData');\n  throwIfInvalidMarketType(marketType);\n  var returnedMarkets = [];\n\n  var _a = getSubmarketsData(eventApiData, marketType),\n      submarketsData = _a[0],\n      error = _a[1];\n\n  if (error) {\n    return [returnedMarkets, error];\n  }\n\n  for (var _i = 0, _b = sanitizedSubmarketKeys(marketType, submarketsData.keys); _i < _b.length; _i++) {\n    var submarketKey = _b[_i];\n    var submarket = submarketsData.data[submarketKey];\n\n    if (!submarket) {\n      continue;\n    }\n\n    var _c = getSubmarket(marketType, eventApiData, submarket, submarketKey, marketOptions),\n        market = _c[0],\n        error_1 = _c[1];\n\n    if (error_1) {\n      continue;\n    }\n\n    returnedMarkets.push(market);\n  }\n\n  return [returnedMarkets, null];\n}\n\nfunction hasAnyMarkets(eventApiData, marketTypes, marketOptions) {\n  if (marketOptions === void 0) {\n    marketOptions = {\n      locale: Locale.en\n    };\n  }\n\n  throwIfUndefined(eventApiData, 'eventApiData');\n  throwIfArrayEmpty(marketTypes, 'marketTypes');\n\n  if (!(eventApiData === null || eventApiData === void 0 ? void 0 : eventApiData.markets)) {\n    return false;\n  }\n\n  for (var _i = 0, marketTypes_1 = marketTypes; _i < marketTypes_1.length; _i++) {\n    var marketType = marketTypes_1[_i];\n\n    if (isPrimaryMarket(marketType)) {\n      return true;\n    }\n\n    if (!hasMarketDefinition(marketType, marketOptions.locale)) {\n      continue;\n    }\n\n    var market = eventApiData.markets[marketType];\n\n    if (market && market.submarkets) {\n      for (var _a = 0, _b = Object.keys(market.submarkets); _a < _b.length; _a++) {\n        var submarketKey = _b[_a];\n\n        if (market.submarkets[submarketKey].selections.length > 0) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction isBoundToPitchers(selection) {\n  return selection.params.includes('home_pitcher') && selection.params.includes('away_pitcher');\n}\n\nfunction getSubmarket(marketType, eventApiData, submarket, submarketKey, marketOptions) {\n  var _a, _b, _c;\n\n  if (marketOptions === void 0) {\n    marketOptions = {\n      locale: Locale.en\n    };\n  }\n\n  throwIfInvalidMarketType(marketType);\n  throwIfUndefined(eventApiData, 'eventApiData');\n  throwIfUndefined(submarket, 'submarket');\n  throwIfUndefined(submarketKey, 'submarketKey');\n  var errorReturnValue = {\n    key: '',\n    primary: false,\n    lines: [],\n    name: '',\n    description: ''\n  };\n\n  if (submarket.blank) {\n    return [errorReturnValue, new Error('blank submarket')];\n  }\n\n  if (!hasMarketDefinition(marketType, marketOptions.locale)) {\n    return [errorReturnValue, new Error(\"no market def and translation for \" + marketType + \" in locale \" + marketOptions.locale)];\n  }\n\n  var selections = submarket.selections;\n\n  if (selections.length < 1) {\n    return [errorReturnValue, new Error(\"no selections for \" + marketType + \" > \" + submarketKey)];\n  }\n\n  var lineSelectionCount;\n  var error;\n  _a = selectionCountPerLine(marketType, submarket), lineSelectionCount = _a[0], error = _a[1];\n\n  if (error) {\n    return [errorReturnValue, error];\n  }\n\n  var marketName;\n  _b = getMarketName(marketOptions.locale, submarket.selections[0], marketType, eventApiData), marketName = _b[0], error = _b[1];\n\n  if (error) {\n    return [errorReturnValue, new Error(\"unable to resolve market name for \" + marketType + \" > \" + submarketKey + \" because \" + error)];\n  }\n\n  var marketDescription;\n  _c = getMarketDescription(marketOptions.locale, marketType), marketDescription = _c[0], error = _c[1];\n\n  if (error) {\n    return [errorReturnValue, error];\n  }\n\n  var lines = [];\n\n  for (var i = 0; i < selections.length; i++) {\n    var selection = selections[i];\n\n    var _d = getOutcome(marketOptions.locale, eventApiData, marketType, selection),\n        outcome = _d[0],\n        error_2 = _d[1];\n\n    if (error_2) {\n      return [errorReturnValue, new Error(\"unable to resolve outcome translations for \" + marketType + \" > \" + submarketKey + \" > \" + selection.outcome + \" because \" + error_2)];\n    }\n\n    if (outcome === null) {\n      return [errorReturnValue, new Error('outcome is impossible to be null')];\n    }\n\n    var line = [];\n\n    if (i % lineSelectionCount.count === 0) {\n      lines.push(line);\n    } else {\n      line = lines[lines.length - 1];\n    }\n\n    var variables = {\n      handicap: outcome.variables['handicap'],\n      total: outcome.variables['total']\n    };\n\n    if (lineSelectionCount.hasLay) {\n      if (i % 2 == 0) {\n        line.push({\n          name: outcome.name,\n          back: selection,\n          variables: variables\n        });\n      } else {\n        line[line.length - 1].lay = selection;\n      }\n    } else {\n      line.push({\n        name: outcome.name,\n        back: selection,\n        variables: variables\n      });\n    }\n  }\n\n  return [{\n    name: marketName,\n    primary: isPrimaryMarket(marketType),\n    description: marketDescription,\n    key: submarketKey,\n    lines: lines\n  }, null];\n}\n\nfunction getSubmarketsData(eventApiData, marketType) {\n  throwIfInvalidMarketType(marketType);\n  throwIfUndefined(eventApiData, 'eventApiData');\n  var emptyReturnValue = {\n    data: {},\n    keys: []\n  };\n  var markets = eventApiData.markets;\n\n  if (!markets) {\n    return [emptyReturnValue, null];\n  }\n\n  var market = markets[marketType];\n\n  if (!market) {\n    return [emptyReturnValue, null];\n  }\n\n  var submarkets = market.submarkets;\n\n  if (!submarkets) {\n    return [emptyReturnValue, null];\n  }\n\n  return [{\n    data: submarkets,\n    keys: Object.keys(submarkets).sort()\n  }, null];\n}\n\nfunction getSubmarketKeys(eventApiData, marketType, marketOptions) {\n  if (marketOptions === void 0) {\n    marketOptions = {\n      locale: Locale.en\n    };\n  }\n\n  if (!hasMarketDefinition(marketType, marketOptions.locale)) {\n    return [[], null];\n  }\n\n  var _a = getSubmarketsData(eventApiData, marketType),\n      submarketsData = _a[0],\n      error = _a[1];\n\n  if (error) {\n    return [[], error];\n  }\n\n  return [sanitizedSubmarketKeys(marketType, submarketsData.keys), null];\n}\n\nfunction isPrimaryMarket(marketType) {\n  var marketDefinitions = getMarketDefinitions(Locale.en);\n  var marketDefinition = marketDefinitions[marketType];\n  return !!(marketDefinition === null || marketDefinition === void 0 ? void 0 : marketDefinition.Primary);\n}\n\nexport { getSportsName, getMarket, hasAnyMarkets, getSubmarket, getSubmarketKeys, loadLocale, possibleOutcomeCount, overUnderMarket, isPrimaryMarket, isBoundToPitchers, isLoaded, isLoading, Locale, MarketType };\nexport { getAllEventMarketsBySport, getAllOutrightMarketsBySport, getAllMarketsBySport } from './marketUtils';\nexport { getSdkSportKey } from './sportUtils';","map":{"version":3,"sources":["../lib/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { getParlayStakeLimit, getSingleStakeLimit } from './liability';\nimport { getSportsName, hasMarketDefinition, isLoaded, isLoading, loadLocale, Locale, MarketType, overUnderMarket, possibleOutcomeCount, selectionCountPerLine, } from './sports-core';\nimport { getMarketDefinitions, getMarketDescription, getMarketName, getOutcome, } from './sports-core/market-definitions';\nexport { getParlayStakeLimit, getSingleStakeLimit };\nfunction throwIfInvalidMarketType(marketType) {\n    if (!marketType || !Object.values(MarketType).includes(marketType)) {\n        throw new Error(\"Got \" + marketType + \", please pass in one of the supported marketType (\" + Object.values(MarketType) + \")\");\n    }\n}\nfunction throwIfUndefined(v, name) {\n    if (typeof v === 'undefined') {\n        throw new Error(\"Missing argument \" + name);\n    }\n}\nfunction throwIfArrayEmpty(v, name) {\n    if (!v || v.length < 1) {\n        throw new Error(\"Missing argument \" + name);\n    }\n}\nfunction sanitizedSubmarketKeys(marketType, submarketKeys) {\n    var marketDefinitions = getMarketDefinitions(Locale.en);\n    var marketDefinition = marketDefinitions[marketType];\n    if (!marketDefinition) {\n        return submarketKeys;\n    }\n    var marketSplits = marketDefinition.Split.split('&');\n    return submarketKeys.reduce(function (accumulator, currentValue) {\n        if (currentValue.includes('{{')) {\n            return accumulator;\n        }\n        var splits = currentValue.split('&');\n        if (splits.length !== marketSplits.length) {\n            return accumulator;\n        }\n        accumulator.push(currentValue);\n        return accumulator;\n    }, []);\n}\nfunction getMarket(eventApiData, marketType, marketOptions) {\n    if (marketOptions === void 0) { marketOptions = {\n        locale: Locale.en,\n    }; }\n    throwIfUndefined(eventApiData, 'eventApiData');\n    throwIfInvalidMarketType(marketType);\n    var returnedMarkets = [];\n    var _a = getSubmarketsData(eventApiData, marketType), submarketsData = _a[0], error = _a[1];\n    if (error) {\n        return [returnedMarkets, error];\n    }\n    for (var _i = 0, _b = sanitizedSubmarketKeys(marketType, submarketsData.keys); _i < _b.length; _i++) {\n        var submarketKey = _b[_i];\n        var submarket = submarketsData.data[submarketKey];\n        if (!submarket) {\n            continue;\n        }\n        var _c = getSubmarket(marketType, eventApiData, submarket, submarketKey, marketOptions), market = _c[0], error_1 = _c[1];\n        if (error_1) {\n            continue;\n        }\n        returnedMarkets.push(market);\n    }\n    return [returnedMarkets, null];\n}\nfunction hasAnyMarkets(eventApiData, marketTypes, marketOptions) {\n    if (marketOptions === void 0) { marketOptions = {\n        locale: Locale.en,\n    }; }\n    throwIfUndefined(eventApiData, 'eventApiData');\n    throwIfArrayEmpty(marketTypes, 'marketTypes');\n    if (!(eventApiData === null || eventApiData === void 0 ? void 0 : eventApiData.markets)) {\n        return false;\n    }\n    for (var _i = 0, marketTypes_1 = marketTypes; _i < marketTypes_1.length; _i++) {\n        var marketType = marketTypes_1[_i];\n        if (isPrimaryMarket(marketType)) {\n            return true;\n        }\n        if (!hasMarketDefinition(marketType, marketOptions.locale)) {\n            continue;\n        }\n        var market = eventApiData.markets[marketType];\n        if (market && market.submarkets) {\n            for (var _a = 0, _b = Object.keys(market.submarkets); _a < _b.length; _a++) {\n                var submarketKey = _b[_a];\n                if (market.submarkets[submarketKey].selections.length > 0) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction isBoundToPitchers(selection) {\n    return (selection.params.includes('home_pitcher') &&\n        selection.params.includes('away_pitcher'));\n}\nfunction getSubmarket(marketType, eventApiData, submarket, submarketKey, marketOptions) {\n    var _a, _b, _c;\n    if (marketOptions === void 0) { marketOptions = {\n        locale: Locale.en,\n    }; }\n    throwIfInvalidMarketType(marketType);\n    throwIfUndefined(eventApiData, 'eventApiData');\n    throwIfUndefined(submarket, 'submarket');\n    throwIfUndefined(submarketKey, 'submarketKey');\n    var errorReturnValue = {\n        key: '',\n        primary: false,\n        lines: [],\n        name: '',\n        description: '',\n    };\n    if (submarket.blank) {\n        return [errorReturnValue, new Error('blank submarket')];\n    }\n    if (!hasMarketDefinition(marketType, marketOptions.locale)) {\n        return [\n            errorReturnValue,\n            new Error(\"no market def and translation for \" + marketType + \" in locale \" + marketOptions.locale),\n        ];\n    }\n    var selections = submarket.selections;\n    if (selections.length < 1) {\n        return [\n            errorReturnValue,\n            new Error(\"no selections for \" + marketType + \" > \" + submarketKey),\n        ];\n    }\n    var lineSelectionCount;\n    var error;\n    _a = selectionCountPerLine(marketType, submarket), lineSelectionCount = _a[0], error = _a[1];\n    if (error) {\n        return [errorReturnValue, error];\n    }\n    var marketName;\n    _b = getMarketName(marketOptions.locale, submarket.selections[0], marketType, eventApiData), marketName = _b[0], error = _b[1];\n    if (error) {\n        return [\n            errorReturnValue,\n            new Error(\"unable to resolve market name for \" + marketType + \" > \" + submarketKey + \" because \" + error),\n        ];\n    }\n    var marketDescription;\n    _c = getMarketDescription(marketOptions.locale, marketType), marketDescription = _c[0], error = _c[1];\n    if (error) {\n        return [errorReturnValue, error];\n    }\n    var lines = [];\n    for (var i = 0; i < selections.length; i++) {\n        var selection = selections[i];\n        var _d = getOutcome(marketOptions.locale, eventApiData, marketType, selection), outcome = _d[0], error_2 = _d[1];\n        if (error_2) {\n            return [\n                errorReturnValue,\n                new Error(\"unable to resolve outcome translations for \" + marketType + \" > \" + submarketKey + \" > \" + selection.outcome + \" because \" + error_2),\n            ];\n        }\n        if (outcome === null) {\n            return [errorReturnValue, new Error('outcome is impossible to be null')];\n        }\n        var line = [];\n        if (i % lineSelectionCount.count === 0) {\n            lines.push(line);\n        }\n        else {\n            line = lines[lines.length - 1];\n        }\n        var variables = {\n            handicap: outcome.variables['handicap'],\n            total: outcome.variables['total'],\n        };\n        if (lineSelectionCount.hasLay) {\n            if (i % 2 == 0) {\n                line.push({\n                    name: outcome.name,\n                    back: selection,\n                    variables: variables,\n                });\n            }\n            else {\n                line[line.length - 1].lay = selection;\n            }\n        }\n        else {\n            line.push({\n                name: outcome.name,\n                back: selection,\n                variables: variables,\n            });\n        }\n    }\n    return [\n        {\n            name: marketName,\n            primary: isPrimaryMarket(marketType),\n            description: marketDescription,\n            key: submarketKey,\n            lines: lines,\n        },\n        null,\n    ];\n}\nfunction getSubmarketsData(eventApiData, marketType) {\n    throwIfInvalidMarketType(marketType);\n    throwIfUndefined(eventApiData, 'eventApiData');\n    var emptyReturnValue = {\n        data: {},\n        keys: [],\n    };\n    var markets = eventApiData.markets;\n    if (!markets) {\n        return [emptyReturnValue, null];\n    }\n    var market = markets[marketType];\n    if (!market) {\n        return [emptyReturnValue, null];\n    }\n    var submarkets = market.submarkets;\n    if (!submarkets) {\n        return [emptyReturnValue, null];\n    }\n    return [\n        {\n            data: submarkets,\n            keys: Object.keys(submarkets).sort(),\n        },\n        null,\n    ];\n}\nfunction getSubmarketKeys(eventApiData, marketType, marketOptions) {\n    if (marketOptions === void 0) { marketOptions = {\n        locale: Locale.en,\n    }; }\n    if (!hasMarketDefinition(marketType, marketOptions.locale)) {\n        return [[], null];\n    }\n    var _a = getSubmarketsData(eventApiData, marketType), submarketsData = _a[0], error = _a[1];\n    if (error) {\n        return [[], error];\n    }\n    return [sanitizedSubmarketKeys(marketType, submarketsData.keys), null];\n}\nfunction isPrimaryMarket(marketType) {\n    var marketDefinitions = getMarketDefinitions(Locale.en);\n    var marketDefinition = marketDefinitions[marketType];\n    return !!(marketDefinition === null || marketDefinition === void 0 ? void 0 : marketDefinition.Primary);\n}\nexport { getSportsName, getMarket, hasAnyMarkets, getSubmarket, getSubmarketKeys, loadLocale, possibleOutcomeCount, overUnderMarket, isPrimaryMarket, isBoundToPitchers, isLoaded, isLoading, Locale, MarketType, };\nexport { getAllEventMarketsBySport, getAllOutrightMarketsBySport, getAllMarketsBySport, } from './marketUtils';\nexport { getSdkSportKey } from './sportUtils';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}