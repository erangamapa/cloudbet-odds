import { EventData, Selection, Submarket, SubmarketsData } from './api-data-types';
import { ReturnValue } from './common/types';
import { getParlayStakeLimit, getSingleStakeLimit } from './liability';
import { Market, MarketOptions } from './sdk-api-types';
import { getSportsName, isLoaded, isLoading, loadLocale, Locale, MarketType, overUnderMarket, possibleOutcomeCount, SportType } from './sports-core';
export { getParlayStakeLimit, getSingleStakeLimit };
declare function getMarket(eventApiData: EventData, marketType: MarketType, marketOptions?: MarketOptions): ReturnValue<Market[]>;
declare function hasAnyMarkets(eventApiData: Pick<EventData, 'markets'>, marketTypes: MarketType[], marketOptions?: MarketOptions): boolean;
declare function isBoundToPitchers(selection: Pick<Selection, 'params'>): boolean;
declare function getSubmarket(marketType: MarketType, eventApiData: EventData, submarket: Submarket, submarketKey: string, marketOptions?: MarketOptions): ReturnValue<Market>;
declare function getSubmarketKeys(eventApiData: EventData, marketType: MarketType, marketOptions?: MarketOptions): ReturnValue<string[]>;
declare function isPrimaryMarket(marketType: MarketType): boolean;
export type { EventData, ReturnValue, SubmarketsData, MarketOptions, Submarket, Market, Selection, SportType, };
export { getSportsName, getMarket, hasAnyMarkets, getSubmarket, getSubmarketKeys, loadLocale, possibleOutcomeCount, overUnderMarket, isPrimaryMarket, isBoundToPitchers, isLoaded, isLoading, Locale, MarketType, };
export { getAllEventMarketsBySport, getAllOutrightMarketsBySport, getAllMarketsBySport, } from './marketUtils';
export { getSdkSportKey } from './sportUtils';
