import { StringDictionary } from '../common/types';
import { MarketType } from './marketEnums';
import { SportType } from './sports-types';
declare type MarketDefinitions = StringDictionary<MarketDefinition>;
declare type SportsLocale = StringDictionary<string>;
interface MarketDefinition {
    Name: string;
    Description?: string;
    Variables: string[];
    Split: string;
    Primary?: boolean;
    Outcomes: StringDictionary<string>;
}
declare type MarketVariables = StringDictionary<string>;
interface TranslationLookup {
    key: string;
    variables: StringDictionary<string>;
}
declare enum Locale {
    de = "de",
    el = "el",
    en = "en",
    es = "es",
    fr = "fr",
    hu = "hu",
    id = "id",
    it = "it",
    ja = "ja",
    ko = "ko",
    lv = "lv",
    nl = "nl",
    pl = "pl",
    pt = "pt",
    pt_BR = "pt_BR",
    ru = "ru",
    tr = "tr",
    zh = "zh",
    zh_CN = "zh_CN",
    zh_TW = "zh_TW"
}
export { Locale, MarketType };
export type { TranslationLookup, SportsLocale, MarketDefinitions, MarketDefinition, MarketVariables, SportType };
